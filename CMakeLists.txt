cmake_minimum_required(VERSION 3.21)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
if("${GEODE_TARGET_PLATFORM}" STREQUAL "iOS" OR IOS)
  set(CMAKE_OSX_ARCHITECTURES "arm64")
else()
  set(CMAKE_OSX_ARCHITECTURES "arm64")
endif()
set(CMAKE_CXX_VISIBILITY_PRESET hidden)
project(NoRateLimit VERSION 1.0.0)
if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wno-error=out-of-line-declaration)
endif()
file(GLOB_RECURSE SOURCES src/*.cpp)
add_library(${PROJECT_NAME} SHARED ${SOURCES})
if(NOT DEFINED ENV{GEODE_SDK})
  message(FATAL_ERROR "Unable to find Geode SDK! Please define GEODE_SDK environment variable to point to Geode")
else()
  message(STATUS "Found Geode: $ENV{GEODE_SDK}")
endif()
add_subdirectory($ENV{GEODE_SDK} ${CMAKE_CURRENT_BINARY_DIR}/geode)
set(GENERATED_SOURCE "${CMAKE_CURRENT_BINARY_DIR}/bindings/bindings/Geode/GeneratedSource.cpp")
set(PATCHED_GENERATED_SOURCE "${CMAKE_CURRENT_BINARY_DIR}/bindings/bindings/Geode/GeneratedSource_patched.cpp")
add_custom_command(
  OUTPUT "${PATCHED_GENERATED_SOURCE}"
  COMMAND ${CMAKE_COMMAND} -E echo "Patching ${GENERATED_SOURCE} into ${PATCHED_GENERATED_SOURCE}"
  COMMAND /bin/sh -c "sed -E 's/(void[[:space:]]+CustomSongWidget::downloadAssetFinished\\(int[[:space:]]+p0,[[:space:]]+GJAssetType[[:space:]]+p1\\)[[:space:]]*)$$$$/$$$$1 { }/' \"${GENERATED_SOURCE}\" > \"${PATCHED_GENERATED_SOURCE}\""
  DEPENDS "${GENERATED_SOURCE}"
)
add_custom_target(patch_geode_bindings ALL DEPENDS "${PATCHED_GENERATED_SOURCE}")
get_target_property(GB_SOURCES GeodeBindings SOURCES)
if(GB_SOURCES)
  list(REMOVE_ITEM GB_SOURCES "${GENERATED_SOURCE}")
  list(APPEND GB_SOURCES "${PATCHED_GENERATED_SOURCE}")
  set_target_properties(GeodeBindings PROPERTIES SOURCES "${GB_SOURCES}")
else()
  message(WARNING "Could not modify GeodeBindings sources; the generated file might not be patched.")
endif()
add_dependencies(GeodeBindings patch_geode_bindings)
setup_geode_mod(${PROJECT_NAME})